#+TITLE: =Program Configuration=
#+AUTHOR: Haider Mirza
* Table of contents :toc:
- [[#about-this-config][About This Config]]
- [[#mbsyncrc][Mbsyncrc]]
- [[#moc][Moc]]
  - [[#config][Config]]
  - [[#theme][Theme]]
- [[#mpv][MPV]]
- [[#qutebrowser][Qutebrowser]]
  - [[#configpy][config.py]]
  - [[#quickmarks][quickmarks]]
  - [[#scripts][Scripts]]
- [[#dunst][Dunst]]
- [[#rofi][Rofi]]

* About This Config
  This literate configuration is for the programs I commonly use
* Email Configuration
** Notmuch
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/.notmuch-config"
  ; THIS DOCUMENT IS MANAGED BY ORGMODE
  [user]
  name=Haider Mirza
  primary_email=haider@haider.gq
  other_email=ha6mi19@keaston.bham.sch.uk

  [database]
  path=/home/haider/mail
  mail_root=/home/haider/mail

  [maildir]
  synchronize_flags=true

  [search]
  exclude_flags=trash;spam

  [new]
  tags=inbox;unread
  ignore=.mbsyncstate;.uidvalidity

  [crypto]
  gpg_path=gpg
#+END_SRC
** Hooks
*** pre-new
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/mail/.notmuch/hooks/pre-new"
  #!/bin/sh

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  mbsync -a

  # if in "foo" directory add "foo" tag
  notmuch tag +inbox -- path:/.*\\/inbox/ 
  notmuch tag +draft -- path:/.*\\/draft/ 
  notmuch tag +sent -inbox -draft -trash -spam -- path:/.*\\/sent/ 
  notmuch tag +trash -- path:/.*\\/trash/ 
  notmuch tag +spam -- path:/.*\\/spam/ 

  # If file was moved out of folder on server, remove respective tag
  notmuch tag -inbox -- not path:/.*\\/inbox/ and tag:inbox
  notmuch tag -trash -- not path:/.*\\/trash/ and tag:trash
  notmuch tag -spam -- not path:/.*\\/spam/ and tag:spam

  notmuch tag +school -- path:ha6mi19@keaston.bham.sch.uk/**
  notmuch tag +work -- path:haider@haider.gq/**

  # Retag all "new" messages "inbox" and "unread"
  # notmuch tag +inbox +unread -- tag:new
  # notmuch tag -inbox -- tag:sent

  # Tag Mailing Lists
  notmuch tag -inbox +list '(' to:crew@morningbrew.com or from:crew@morningbrew.com ')'

  # Tag Guix emails
  notmuch tag +guix '(' to:help-debbugs@gnu.org or from:help-debbugs@gnu.org ')'
  notmuch tag +guix '(' to:help-guix@gnu.org or from:help-guix@gnu.org ')'
  notmuch tag +guix '(' to:bug-guix@gnu.org or from:bug-guix@gnu.org ')'
  notmuch tag +guix -- subject:guix
  notmuch tag +guix -- body:guix

#+END_SRC
*** post-new
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/mail/.notmuch/hooks/post-new"
  #!/bin/sh

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  emacsclient -e "(modeline/update-notmuch-activity-string)"
#+END_SRC
** Mbsyncrc
  This file is the config file used for managing email in Mu4e.
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/.mbsyncrc"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  Create Both
  Expunge Both
  SyncState *

  # Work account
  IMAPAccount work
  Host "outlook.office365.com"
  User "haider@haider.gq"
  # PassCmd   "pass Email/haider@haider.gq | head -n1"
  PassCmd "emacsclient -e \"(password-store-get \\\"Email/haider@haider.gq\\\")\" | cut -d '\"' -f2"
  SSLType IMAPS

  IMAPStore work-remote
  Account work

  MaildirStore work-local
  Subfolders Verbatim
  Path "/home/haider/mail/haider@haider.gq/"
  Inbox "/home/haider/mail/haider@haider.gq/inbox"

  channel work-inbox
  near ":work-local:inbox"
  far ":work-remote:INBOX"

  channel work-sent
  near ":work-local:sent"
  far ":work-remote:/Sent Items"

  channel work-drafts
  near ":work-local:drafts"
  far ":work-remote:/Drafts"

  channel work-trash
  near ":work-local:trash"
  far ":work-remote:/Deleted Items"

  channel work-spam
  near ":work-local:spam"
  far ":work-remote:/Junk Email"

  group work 
  channel work-inbox
  channel work-sent
  channel work-drafts
  channel work-trash
  channel work-spam

  # Work account
  IMAPAccount school
  Host "outlook.office365.com"
  User "ha6mi19@keaston.bham.sch.uk"
  PassCmd "emacsclient -e \"(password-store-get \\\"Email/ha6mi19@keaston.bham.sch.uk\\\")\" | cut -d '\"' -f2"
  # PassCmd   "pass Email/ha6mi19@keaston.bham.sch.uk | head -n1"
  SSLType IMAPS

  IMAPStore school-remote
  Account school

  MaildirStore school-local
  Subfolders Verbatim
  Path "/home/haider/mail/ha6mi19@keaston.bham.sch.uk/"
  Inbox "/home/haider/mail/ha6mi19@keaston.bham.sch.uk/inbox"

  channel school-inbox
  near ":school-local:inbox"
  far ":school-remote:INBOX"

  channel school-sent
  near ":school-local:sent"
  far ":school-remote:/Sent Items"

  channel school-drafts
  near ":school-local:drafts"
  far ":school-remote:/Drafts"

  channel school-trash
  near ":school-local:trash"
  far ":school-remote:/Deleted Items"

  channel school-spam
  near ":school-local:spam"
  far ":school-remote:/Junk Email"

  group school
  channel school-inbox
  channel school-sent
  channel school-drafts
  channel school-trash
  channel school-spam
#+END_SRC
** MSMTP
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/.msmtprc"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  # Set default values for all following accounts.
  defaults
  auth           on
  tls            on
  tls_starttls on
  tls_trust_file /etc/ssl/certs/ca-certificates.crt
  logfile        ~/.msmtp.log

  # Gmail
  account        personal
  host smtp-mail.outlook.com
  port 587
  from haider@haider.gq 
  user haider@haider.gq 
  passwordeval   "pass Email/haider@haider.gq | head -n1"
  auth on
  tls on

  # Gmail
  account        school 
  host           smtp-mail.outlook.com
  port           587
  host           ha6mi19@keaston.bham.sch.uk
  user           ha6mi19
  passwordeval   "pass Email/ha6mi19@keaston.bham.sch.uk | head -n1"

  # Set a default account
  account default : personal
#+END_SRC
* Moc
** Config
This file has alot of comments in it to help users configure it if needed.
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/.moc/config"

  # THIS DOCUMENT IS MANAGED BY ORGMODE
    
  MusicDir = "/home/haider/Moc"
  StartInMusicDir = yes
  Theme = HM_theme
#+END_SRC
** Theme
My custom MOC theme.
#+BEGIN_SRC fundamental :tangle "/home/haider/dotfiles/stow/.moc/themes/HM_theme"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  # Moc theme by Haider Mirza

  background				= blue		black
  frame					= blue		black   bold
  window_title		        	= red		black
  directory				= blue		black
  selected_directory		        = black		magenta	
  playlist				= blue		black   bold
  selected_playlist		        = black		magenta	
  file					= blue		black   bold
  selected_file			        = black		magenta	
  marked_file				= green		black	bold
  marked_selected_file	                = green		magenta	bold
  info					= green		black	bold
  status					= blue		black   bold
  title					= green		black	bold
  state					= blue		black   bold
  current_time			        = magenta	black	bold
  time_left				= magenta	black	bold
  total_time				= yellow	black	bold
  time_total_frames		        = blue		black   bold
  sound_parameters		        = cyan		black	bold
  legend					= cyan		black   bold
  disabled				= black		black   bold
  enabled					= blue		black	bold
  empty_mixer_bar			        = blue		black   bold
  filled_mixer_bar		        = black		magenta	
  empty_time_bar			        = blue		black
  filled_time_bar		         	= blue		black	
  entry					= blue		black
  entry_title				= blue		black
  error					= blue		black	bold
  message					= blue		black
  plist_time				= blue		black
#+END_SRC 
* MPV
Mpv is my personal favourite when it comes to media players
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/.config/mpv/mpv.conf"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  # Save on quit
  save-position-on-quit

  # Limit the resolution of YouTube videos
  ytdl-format=bestvideo[height<=?1080]+bestaudio/best

  # Keep the player open after the file finishes
  keep-open

  # Subtitles
  demuxer-mkv-subtitle-preroll=yes
  sub-font='Trebuchet MS'
  sub-bold=yes # Set the font to bold.
  #sub-font-size=55 # Set default subtitle size if not specified.
  sub-auto=fuzzy
  ytdl-raw-options=ignore-config=,sub-format=en,write-sub=
#+END_SRC
* Qutebrowser
This is (by far) my favorite browser where vimb is a worthy alternative.
** config.py
#+BEGIN_SRC fundamental :tangle "/home/haider/dotfiles/stow/.config/qutebrowser/config.py"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  # Open every tab as a new window, Vimb style
  c.tabs.tabs_are_windows = True
  c.tabs.last_close = "close"

  c.auto_save.session = True
  c.scrolling.smooth = True
  c.session.lazy_restore = True
  c.content.autoplay = False

  # Better default fonts
  c.fonts.default_family = '"Source Code Pro"'
  c.fonts.completion.entry = '11pt "Source Code Pro"'
  c.fonts.debug_console = '11pt "Source Code Pro"'
  c.fonts.default_size = '11pt'
  c.fonts.prompts = 'default_size sans-serif'
  c.fonts.statusbar = '10pt "Source Code Pro"'

  # Use dark mode where possible
  # c.colors.webpage.preferred_color_scheme = "dark"
  # c.colors.webpage.darkmode.enabled = True
  # c.colors.webpage.darkmode.policy.images = "never"
  # c.colors.webpage.bg = "black"

  # Scale pages and UI better for hidpi
  c.fonts.hints = "bold 15pt monospace"

  # Set Downloads Directory
  c.downloads.location.directory = '~/Downloads'

  # When to show tabs
  c.tabs.show = "never"
  c.statusbar.show = "never"

  # Setting default page for when opening new tabs or new windows with
  # commands like :open -t and :open -w .
  c.url.default_page = 'https://start.duckduckgo.com/'
  c.url.start_pages = 'https://start.duckduckgo.com/'

  c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}', 'am': 'https://www.amazon.com/s?k={}', 'aw': 'https://wiki.archlinux.org/?search={}', 'goog': 'https://www.google.com/search?q={}', 'hoog': 'https://hoogle.haskell.org/?hoogle={}', 're': 'https://www.reddit.com/r/{}', 'ub': 'https://www.urbandictionary.com/define.php?term={}', 'wiki': 'https://en.wikipedia.org/wiki/{}', 'yt': 'https://www.youtube.com/results?search_query={}', 'aur': 'https://aur.archlinux.org/packages/?O=0&K={}', 'od': 'https://odysee.com/$/search?q={}'}

  c.colors.completion.fg = ['#9cc4ff', 'white', 'white']
  c.colors.completion.odd.bg = '#1c1f24'
  c.colors.completion.even.bg = '#232429'
  c.colors.completion.category.fg = '#e1acff'
  c.colors.completion.category.bg = 'qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #000000, stop:1 #232429)'
  c.colors.completion.category.border.top = '#3f4147'
  c.colors.completion.category.border.bottom = '#3f4147'
  c.colors.completion.item.selected.fg = '#282c34'
  c.colors.completion.item.selected.bg = '#ecbe7b'
  c.colors.completion.item.selected.match.fg = '#c678dd'
  c.colors.completion.match.fg = '#c678dd'
  c.colors.completion.scrollbar.fg = 'white'
  c.colors.downloads.bar.bg = '#282c34'
  c.colors.downloads.error.bg = '#ff6c6b'
  c.colors.hints.fg = '#282c34'
  c.colors.hints.match.fg = '#98be65'
  c.colors.messages.info.bg = '#282c34'
  c.colors.statusbar.normal.bg = '#282c34'
  c.colors.statusbar.insert.fg = 'white'
  c.colors.statusbar.insert.bg = '#497920'
  c.colors.statusbar.passthrough.bg = '#34426f'
  c.colors.statusbar.command.bg = '#282c34'
  c.colors.statusbar.url.warn.fg = 'yellow'
  c.colors.tabs.bar.bg = '#1c1f34'
  c.colors.tabs.odd.bg = '#282c34'
  c.colors.tabs.even.bg = '#282c34'
  c.colors.tabs.selected.odd.bg = '#282c34'
  c.colors.tabs.selected.even.bg = '#282c34'
  c.colors.tabs.pinned.odd.bg = 'seagreen'
  c.colors.tabs.pinned.even.bg = 'darkseagreen'
  c.colors.tabs.pinned.selected.odd.bg = '#282c34'
  c.colors.tabs.pinned.selected.even.bg = '#282c34'

  # Automatically turn on insert mode when a loaded page focuses a text field
  c.input.insert_mode.auto_load = True


  # Edit fields in Emacs with Ctrl+E
  c.editor.command = ["emacsclient", "+{line}:{column}", "{file}"]

  # Make Ctrl+g quit everything like in Emacs
  config.bind('<Ctrl-g>', 'leave-mode', mode='insert')
  config.bind('<Ctrl-g>', 'leave-mode', mode='command')
  config.bind('<Ctrl-g>', 'leave-mode', mode='prompt')
  config.bind('<Ctrl-g>', 'leave-mode', mode='hint')
  # config.unbind('b') # Re-keybind 'b'
  # config.bind('b', 'spawn ~/.config/qutebrowser/Qute.sh')

  # Tweak some keybindings
  config.unbind('d') # Don't close window on lower-case 'd'
  config.bind('yy', 'yank')

  # Vim-style movement keys in command mode
  config.bind('<Ctrl-j>', 'completion-item-focus --history next', mode='command')
  config.bind('<Ctrl-k>', 'completion-item-focus --history prev', mode='command')

  # More binding hints here: https://gitlab.com/Kaligule/qutebrowser-emacs-config/blob/master/config.py

  config.bind('X', 'wq')
  config.unbind('d') # Dont want to accidentally delete my tab
  config.unbind('u') # rekeybind the u key
  config.bind('Q', 'bookmark-add')
  config.bind('W', 'bookmark-del')
  config.bind('E', 'bookmark-list')
  config.bind('u', 'undo --window')
  config.bind('b', 'set-cmd-text -s :tab-select ', mode='normal')
  config.bind('z', 'spawn ~/.config/qutebrowser/scripts/mpv.sh;; spawn mpv --speed=2 --ytdl-raw-options=\'sub-lang=\"en\",write-sub=,write-auto-sub=\' {url}')
  config.bind('Z', 'hint links spawn mpv --speed=2 --ytdl-raw-options=\'sub-lang=\"en\",write-sub=,write-auto-sub=\' {hint-url}')
  config.bind('t', 'set-cmd-text -s :open -t')
  config.bind('xb', 'config-cycle statusbar.show always never')
  config.bind('xt', 'config-cycle tabs.show always never')
  config.bind('xx', 'config-cycle statusbar.show always never;; config-cycle tabs.show always never')

  c.content.javascript.enabled = True
  c.content.webgl = True

  # Load the autoconfig file (quteconfig.py)
  config.load_autoconfig()
#+END_SRC
** quickmarks

#+BEGIN_SRC elisp :tangle "/home/haider/dotfiles/stow/.config/qutebrowser/quickmarks"
arch https://wiki.archlinux.org/
git https://github.com/Haider-Mirza
tv https://twitch.tv/
ub https://www.urbandictionary.com/
wiki https://www.wikipedia.org/
yt https://www.youtube.com/
tw https://www.twitter.com/
re https://www.reddit.com/
dfm https://www.drfrostmaths.com/
tm https://teams.microsoft.com/
dc https://discord.com/
wl https://www.youtube.com/playlist?list=WL
ker https://www.kerboodle.com/users/login/
dow https://iyoutubetomp4.com/en/
has https://www.youtube.com/watch?v=FPxFmuIz1ho&t=602s
dis https://www.youtube.com/channel/UCVls1GmFKf6WlTraIb_IaJg
ble https://www.blender.org/
poli https://www.poliigon.com/
sims https://www.sims-student.co.uk/#/schools/bc593c90-637e-42cf-88cd-c9f6cc73ab2b/home
web http://www.haider.gq/
org https://orgmode.org/
bt https://bazaartracker.com/
hy https://hypixel.net/
bash https://wiki.bash-hackers.org/
edu https://www.educake.co.uk/
mel https://melpa.org/#/
rust https://www.rust-lang.org/
fsf https://www.fsf.org/
mo http://www.mohamedawadalkarim.gq/
gi https://www.gimp.org/
fon https://fonts.google.com/
ser http://localhost:8080/
au https://aur.archlinux.org/
w3 https://www.w3schools.com/
oad https://play0ad.com/
gm https://mail.google.com/mail/u/0/?hl=en-GB#inbox
me https://www.merriam-webster.com/
vim https://vimsheet.com/
mine https://www.minecraft.net/en-us
elpa https://elpa.gnu.org/
gnu https://www.gnu.org/
gu https://guix.gnu.org/
guma https://guix.gnu.org/en/manual/devel/en/guix.html
mon https://monkeytype.com/login
ed https://www.edclub.com/sportal/program-3.game
sys https://systemcrafters.net/
gl https://learnopengl.com/
ch https://lichess.org/
pdb https://www.protondb.com/
ip https://www.bbc.co.uk/iplayer
cl https://clangd.llvm.org/
ti file:///home/haider/Downloads/Timetable.html
ou https://outlook.office.com/mail/
su https://www.youtube.com/feed/subscriptions
guco https://guix.gnu.org/en/cookbook/en/guix-cookbook.html
glfw https://www.glfw.org/
od https://odysee.com/
orgma https://orgmode.org/org.html
#+END_SRC
** Scripts
Here are some small scripts used in qutebrowser

*** mpv.sh
Switch workspace to 3 (this workspace is dedicated for videos that are launched in mpv)
#+BEGIN_SRC shell-script :tangle "/home/haider/dotfiles/stow/.config/qutebrowser/scripts/mpv.sh"
  #!/usr/bin/env bash

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  # _   _ __  __
  #| | | |  \/  |
  #| |_| | |\/| | Made by Haider Mirza
  #|  _  | |  | | My Github: https://github.com/Haider-Mirza
  #|_| |_|_|  |_|

  emacsclient -e "(exwm-workspace-switch-create 3)"

#+END_SRC
* Dunst
#+BEGIN_SRC fundamental :tangle "/home/haider/dotfiles/stow/.config/dunst/dunstrc"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  #
  #   ██████╗ ██╗   ██╗███╗   ██╗███████╗████████╗
  #   ██╔══██╗██║   ██║████╗  ██║██╔════╝╚══██╔══╝
  #   ██║  ██║██║   ██║██╔██╗ ██║███████╗   ██║
  #   ██║  ██║██║   ██║██║╚██╗██║╚════██║   ██║
  #   ██████╔╝╚██████╔╝██║ ╚████║███████║   ██║
  #   ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝
  #
    [global]
    font = jetbrains mono 10

    width = 250
    height = 70
    origin = top-right
    offset = 10x10
    notification_limit = 5
    corner_radius = 5
    sort = yes
    indicate_hidden = yes
    alignment = left
    history_length = 30
    icon_path = /home/haider/.guix-profile/share/icons/hicolor/32x32/apps/
    browser = /home/haider/.guix-profile/bin/qutebrowser --target tab
    padding = 8
    horizontal_padding = 10
    always_run_scripts = true

    [shortcuts]
    close_all = ctrl+mod4+space

    [urgency_low]
    format = "<b>%s</b>\n%b"
    background = "#282C34"
    foreground = "#86A75D"
    frame_color = "#51AFEF"
    timeout = 2

    [urgency_normal]
    format = "<b>%s</b>\n%b"
    background = "#282C34"
    foreground = "#86A75D"
    frame_color = "#51AFEF"
    timeout = 5

    [urgency_critical]
    format = "<b>%s</b>\n%b"
    background = "#282C34"
    foreground = "#86A75D"
    frame_color = "#FF0000"
    timeout = 0

    [irc]
    appname = weechat
    timeout = 0
    background = "#0033bb"
    foreground = "#dddddd"
    timeout = 10
#+END_SRC
* Rofi
I know, I hate the formatting
#+BEGIN_SRC conf :tangle "/home/haider/dotfiles/stow/.config/rofi/config.rasi"

  # THIS DOCUMENT IS MANAGED BY ORGMODE

  configuration {
  modi: "window,drun,ssh,run";
  timeout {
  action: "kb-cancel";
  delay:  0;
  }
  filebrowser {
  directories-first: true;
  sorting-method:    "name";
  }
  }

  /**
  ,* rofi -dump-theme output.
  ,* Rofi version: 1.7.0
  ,**/

  ,*{
  active-background:           @background;
  active-foreground:           @foreground;
  normal-background:           @background;
  normal-foreground:           @foreground;
  urgent-background:           #1C304B;
  urgent-foreground:           @foreground;

  alternate-active-background: @background;
  alternate-active-foreground: @foreground;
  alternate-normal-background: @background;
  alternate-normal-foreground: @foreground;
  alternate-urgent-background: @background;
  alternate-urgent-foreground: @foreground;

  selected-active-background:  #58344C;
  selected-active-foreground:  @foreground;
  selected-normal-background:  @background;
  selected-normal-foreground:  @border-color;
  selected-urgent-background:  #839BBC;
  selected-urgent-foreground:  @foreground;

  lightfg:                     rgba ( 88, 104, 117, 100 % );
  separatorcolor:              @foreground;
  lightbg:                     rgba ( 238, 232, 213, 100 % );
  normal-foreground:           @foreground;

  background-color:            @background;
  background:                  #121a27;
  foreground:                  #b0bfc4;
  border-color:                #DA1C52;
  spacing:                     2;
  font: "Hack Nerd Font Mono 9";
  }
  element {
  padding: 1px ;
  cursor:  pointer;
  spacing: 5px ;
  border:  0;
  }
  element normal.normal {
  background-color: @normal-background;
  text-color:       @normal-foreground;
  }
  element normal.urgent {
  background-color: @urgent-background;
  text-color:       @urgent-foreground;
  }
  element normal.active {
  background-color: @active-background;
  text-color:       @active-foreground;
  }
  element selected.normal {
  background-color: @selected-normal-background;
  text-color:       @selected-normal-foreground;
  }
  element selected.urgent {
  background-color: @selected-urgent-background;
  text-color:       @selected-urgent-foreground;
  }
  element selected.active {
  background-color: @selected-active-background;
  text-color:       @selected-active-foreground;
  }
  element alternate.normal {
  background-color: @alternate-normal-background;
  text-color:       @alternate-normal-foreground;
  }
  element alternate.urgent {
  background-color: @alternate-urgent-background;
  text-color:       @alternate-urgent-foreground;
  }
  element alternate.active {
  background-color: @alternate-active-background;
  text-color:       @alternate-active-foreground;
  }
  element-text {
  background-color: rgba ( 0, 0, 0, 0 % );
  cursor:           inherit;
  highlight:        inherit;
  text-color:       inherit;
  }
  element-icon {
  background-color: rgba ( 0, 0, 0, 0 % );
  size:             1.0000em ;
  cursor:           inherit;
  text-color:       inherit;
  }
  window {
  background-color: @background;
  height: 55%;
  width: 35%;
  border:    0;
  padding:   2.5ch;
  }
  mainbox {
  padding: 0;
  border:  0;
  }
  message {
  padding:      1px ;
  border-color: var(separatorcolor);
  border:       2px dash 0px 0px ;
  }
  textbox {
  text-color: @foreground;
  }
  listview {
  padding:      2px 0px 0px ;
  scrollbar:    false;
  border-color: @border-color;
  spacing:      2px ;
  fixed-height: 0;
  border:       0px dash 0px 0px ;
  }
  scrollbar {
  width:        4px ;
  padding:      0;
  handle-width: 8px ;
  border:       0;
  handle-color: @normal-foreground;
  }
  sidebar {
  border-color: var(separatorcolor);
  border:       2px dash 0px 0px ;
  }
  button {
  cursor:     pointer;
  spacing:    0;
  text-color: @normal-foreground;
  }
  button selected {
  background-color: @selected-normal-background;
  text-color:       @selected-normal-foreground;
  }
  num-filtered-rows {
  expand:     false;
  text-color: rgba ( 128, 128, 128, 100 % );
  }
  num-rows {
  expand:     false;
  text-color: rgba ( 128, 128, 128, 100 % );
  }
  textbox-num-sep {
  expand:     false;
  str:        "/";
  text-color: rgba ( 128, 128, 128, 100 % );
  }
  inputbar {
  padding:    1px ;
  spacing:    0px ;
  text-color: @normal-foreground;
  children:   [ prompt,textbox-prompt-colon,entry,num-filtered-rows,textbox-num-sep,num-rows,case-indicator ];
  }
  case-indicator {
  spacing:    0;
  text-color: @normal-foreground;
  }
  entry {
  text-color:        @normal-foreground;
  cursor:            text;
  spacing:           0;
  placeholder-color: rgba ( 128, 128, 128, 100 % );
  placeholder:       "Type to filter";
  }
  prompt {
  spacing:    0;
  text-color: @normal-foreground;
  }
  textbox-prompt-colon {
  margin:     0px 0.3000em 0.0000em 0.0000em ;
  expand:     false;
  str:        ":";
  text-color: inherit;
  }
#+END_SRC
